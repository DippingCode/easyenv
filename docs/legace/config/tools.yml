tools:
  # ========== CLI Tools ==========
  - name: git
    section: CLI Tools
    manager: brew
    formula: git
    description: "Git — controle de versão distribuído"

  - name: fzf
    section: CLI Tools
    manager: brew
    formula: fzf
    description: "fzf — fuzzy finder interativo para terminal"

  - name: docker
    section: CLI Tools
    manager: brew-cask
    formula: docker
    description: "Docker Desktop for Mac — containers e Docker Compose"

  - name: aws-cli
    section: CLI Tools
    manager: brew
    formula: awscli
    description: "AWS CLI v2 — interface de linha de comando para AWS"

  - name: gcloud
    section: CLI Tools
    manager: brew-cask
    formula: google-cloud-sdk
    description: "Google Cloud SDK — CLI oficial do Google Cloud"

  - name: supabase
    section: CLI Tools
    manager: brew
    tap: supabase/tap
    formula: supabase
    description: "Supabase CLI — gerenciamento de projetos e stack local"
    # docker é um pré-requisito para 'supabase start' (checado no doctor)

  # ========== Web ==========
  - name: node
    section: Web
    manager: brew
    formula: nvm
    description: "Node via NVM — múltiplas versões e alias default"
    zshrc_blocks:
      - id: "EASYENV:NVM"
        content: |
          # NVM (Node Version Manager)
          export NVM_DIR="$HOME/.nvm"
          if [ -s "/opt/homebrew/opt/nvm/nvm.sh" ]; then
            . "/opt/homebrew/opt/nvm/nvm.sh"
          fi
          if [ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ]; then
            . "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"
          fi

  - name: angular
    section: Web
    manager: npm
    formula: "@angular/cli"
    description: "Angular CLI — scaffolding e ferramentas de build para Angular"

  - name: deno
    section: Web
    manager: brew
    formula: deno
    description: "Deno — runtime moderno para JavaScript e TypeScript"

  # ========== Backend ==========
  - name: go
    section: Backend
    manager: brew
    formula: go
    description: "Go — linguagem e toolchain"

  - name: rust
    section: Backend
    manager: brew
    formula: rustup-init
    description: "Rust (rustup) — gerenciador de toolchains Rust"
    zshrc_blocks:
      - id: "EASYENV:RUST"
        content: |
          # Rustup
          export CARGO_HOME="$HOME/.cargo"
          export RUSTUP_HOME="$HOME/.rustup"
          case ":$PATH:" in
            *":$CARGO_HOME/bin:"*) ;;
            *) export PATH="$CARGO_HOME/bin:$PATH" ;;
          esac

  # ========== Data ==========
  - name: python
    section: Data
    manager: brew
    formula: pyenv
    description: "Python via pyenv — múltiplas versões e shims"
    zshrc_blocks:
      - id: "EASYENV:PYENV"
        content: |
          # pyenv
          if command -v pyenv >/dev/null 2>&1; then
            eval "$(pyenv init -)"
          fi

  # ========== .NET ==========
  - name: dotnet
    section: .NET
    manager: brew-cask
    formula: dotnet-sdk
    description: ".NET SDK — suporte a múltiplas linhas (6/7/8/9) e global.json"

  # ========== Flutter ==========
  - name: flutter
    section: Flutter
    manager: brew
    formula: fvm
    description: "Flutter via FVM — gerenciador de versões do Flutter"
    zshrc_blocks:
      - id: "EASYENV:FVM"
        content: |
          # FVM — Flutter Version Manager
          export FVM_CACHE_PATH="$HOME/.fvm"
          case ":$PATH:" in
            *":$FVM_CACHE_PATH/default/bin:"*) ;;
            *) export PATH="$FVM_CACHE_PATH/default/bin:$PATH" ;;
          esac

  # ========== Mobile ==========
  - name: android
    section: Mobile
    manager: sdkmanager
    description: "Android SDK, platform-tools, emulator e AVDs"
    zshrc_blocks:
      - id: "EASYENV:ANDROID"
        content: |
          # Android SDK
          export ANDROID_SDK_ROOT="$HOME/Library/Android/sdk"
          export ANDROID_HOME="$ANDROID_SDK_ROOT"
          # platform-tools
          case ":$PATH:" in
            *":$ANDROID_SDK_ROOT/platform-tools:"*) ;;
            *) export PATH="$ANDROID_SDK_ROOT/platform-tools:$PATH" ;;
          esac
          # emulator
          case ":$PATH:" in
            *":$ANDROID_SDK_ROOT/emulator:"*) ;;
            *) export PATH="$ANDROID_SDK_ROOT/emulator:$PATH" ;;
          esac
          # cmdline-tools
          if [ -d "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" ]; then
            case ":$PATH:" in
              *":$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:"*) ;;
              *) export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH" ;;
            esac
          fi
          
  - name: ios
    section: Mobile
    manager: cask
    cask: xcode
    description: "Xcode (iOS) e CocoaPods para dependências."
    post_install:
      - 'sudo xcodebuild -license accept || true'
      - 'sudo xcode-select -s /Applications/Xcode.app/Contents/Developer || true'
      - 'which pod >/dev/null 2>&1 || sudo gem install cocoapods'
    check:
      - xcodebuild -version
      - pod --version
    zshrc_blocks:
      - id: "EASYENV:IOS:env"
        content: |
          export DEVELOPER_DIR="/Applications/Xcode.app/Contents/Developer"
          # CocoaPods precisa do Ruby/Gem no PATH (normal no macOS). Se necessário:
          # export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:$PATH"

  - name: firebase
    section: Mobile
    manager: npm
    formula: firebase-tools
    description: "Firebase CLI — deploy, auth e ferramentas de projeto"

  - name: react
    section: Web
    manager: npm_global
    npm_global: create-vite
    description: "Scaffolder moderno para apps React via Vite (npm create vite@latest)"
    check:
      - node -v
      - npm -v
      - create-vite --version
    zshrc_blocks:
      - id: "EASYENV:REACT:aliases"
        content: |
          # Atalhos React/Vite
          alias react-new='npm create vite@latest'
          alias react-new-react='npm create vite@latest my-react-app -- --template react'
          alias vite-new='npm create vite@latest'
  - name: react-native
    section: Mobile
    manager: npm_global
    npm_global: react-native-cli
    description: "React Native CLI para desenvolvimento mobile (Android/iOS)"
    check:
      - node -v
      - npm -v
      - react-native --version
    zshrc_blocks:
      - id: "EASYENV:REACTMOBILE:aliases"
        content: |
          # Atalhos React Native
          alias rn-new='npx react-native init'
          alias rn-ios='npx react-native run-ios'
          alias rn-android='npx react-native run-android'
          alias rn-start='npx react-native start'
stacks:
  react:
    description: "Stack para desenvolvimento React (web) e React Native (mobile)."
    includes:
      - node
      - react          # plugin/tool web (React)
      - react-native   # plugin/tool mobile (React Native)
      - android        # SDK/Emulador Android
      - ios            # Xcode + CocoaPods